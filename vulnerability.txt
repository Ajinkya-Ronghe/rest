üõ°Ô∏è 1. SCA (Software Composition Analysis)
Overview:
SCA tools analyze the dependencies and libraries used in a software project‚Äîespecially open-source components. These tools identify known vulnerabilities, license risks, and deprecated versions.

Why it‚Äôs important:
Modern applications are heavily dependent on open-source. If a vulnerable version is used unknowingly, it can expose the application to security risks. SCA helps proactively detect and fix these risks.

Typical Tools:

Snyk

Black Duck

WhiteSource

OWASP Dependency-Check

What it helps detect:

CVEs (Common Vulnerabilities and Exposures)

License compliance issues (GPL, MIT, etc.)

Outdated or unsupported versions

Transitive dependency issues

üîç 2. Veracode SAST (Static Application Security Testing)
Overview:
SAST tools scan source code or bytecode without executing it to find vulnerabilities early in the SDLC (Static Testing). Veracode is one of the leading tools in this space.

What it helps detect:

SQL Injection

Cross-Site Scripting (XSS)

CSRF (Cross-Site Request Forgery)

Path Traversal

Hardcoded secrets

Input validation issues

Benefits:

Shift-left security‚Äîscan early during development

Faster feedback to developers

Integrates with CI/CD pipelines

Supports many programming languages

In Context (e.g., MetLife):
Used regularly to scan all Java microservices. Critical flaws must be remediated before moving to higher environments. Reports are reviewed in security audits.

üìä 3. Sonar / SonarQube
Overview:
SonarQube is used for static code quality analysis. It doesn‚Äôt only focus on security but also on code maintainability, reliability, and test coverage.

Key Metrics Tracked:

Code Coverage (often expected > 90%)

Code Smells

Bugs

Duplications

Maintainability Index

Cyclomatic Complexity

Why it's useful:

Helps enforce coding standards

Easily integrates with GitHub/GitLab and CI/CD

Helps new developers understand legacy code through clear metrics

Common in Java Projects:
Almost every enterprise-level Java microservice includes SonarQube analysis in the pipeline.

üîê 4. Primenon
Overview:
Primenon (sometimes confused with other tools) is used for in-depth security scanning‚Äîsimilar to Veracode or Fortify‚Äîeither statically or dynamically depending on configuration.

What it helps detect:

Improper access controls

Configuration-level vulnerabilities

Default or hardcoded credentials

Outdated cryptographic standards

Insecure endpoints

How it's used:

Part of Secure SDLC in large enterprises

Findings from Primenon are treated as security action items

Integrated in CI/CD or used as part of quarterly audits

