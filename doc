<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>ESHRestAPIMicroservice Documentation</title>
    <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; }
        h1, h2, h3 { color: #333; }
        a { text-decoration: none; color: #007bff; }
        a:hover { text-decoration: underline; }
        pre { background: #f4f4f4; padding: 10px; border-radius: 5px; }
    </style>
</head>
<body>
    <h1>ESHRestAPIMicroservice Documentation</h1>
    <h2>Table of Contents</h2>
    <ul>
        <li><a href="#introduction">Introduction</a></li>
        <li><a href="#project-structure">Project Structure</a></li>
        <li><a href="#technology-stack">Technology Stack</a></li>
        <li><a href="#setup-and-installation">Setup and Installation</a></li>
        <li><a href="#configuration">Configuration</a></li>
        <li><a href="#endpoints">Endpoints</a></li>
        <li><a href="#batch-processing-logic">Batch Processing Logic</a></li>
        <li><a href="#database-schema">Database Schema</a></li>
        <li><a href="#logging-mechanism">Logging Mechanism</a></li>
        <li><a href="#error-handling">Error Handling</a></li>
        <li><a href="#deployment">Deployment</a></li>
        <li><a href="#future-enhancements">Future Enhancements</a></li>
    </ul>

    <h2 id="introduction">Introduction</h2>
    <p>This document provides a comprehensive guide to the <b>ESHRestAPIMicroservice</b> project, covering its architecture, setup, functionality, and deployment processes.</p>

    <h2 id="project-structure">Project Structure</h2>
    <pre>
ESHRestAPIMicroservice/
│── src/
│   ├── main/
│   │   ├── java/com/infy/ceh/management/
│   │   │   ├── controller/
│   │   │   ├── service/
│   │   │   ├── repository/
│   │   │   ├── util/
│   │   │   ├── Application.java
│   │   ├── resources/
│   │       ├── application.properties
│   │       ├── logback-spring.xml
│── target/
│── pom.xml
│── README.md
    </pre>

    <h2 id="technology-stack">Technology Stack</h2>
    <ul>
        <li><b>Spring Boot</b> - Microservices framework</li>
        <li><b>PostgreSQL</b> - Database</li>
        <li><b>Java 11+</b> - Programming language</li>
        <li><b>Maven</b> - Build tool</li>
        <li><b>Docker</b> - Containerization (Optional)</li>
    </ul>

    <h2 id="setup-and-installation">Setup and Installation</h2>
    <h3>Prerequisites:</h3>
    <ul>
        <li>Java 11 or later installed</li>
        <li>PostgreSQL configured</li>
        <li>Maven installed</li>
    </ul>
    <h3>Steps to Set Up:</h3>
    <pre>
1. Clone the repository:
   git clone &lt;repository_url&gt;

2. Navigate to the project directory:
   cd ESHRestAPIMicroservice

3. Build the project:
   mvn clean package

4. Run the microservice:
   java -jar target/ESHRestAPIMicroservice-1.0-SNAPSHOT.jar
    </pre>

    <h2 id="configuration">Configuration</h2>
    <pre>
server.port=8443
server.ssl.key-store=config/keystore.jks
spring.config.location=file:./config/
spring.datasource.url=jdbc:postgresql://localhost:5432/mydb
spring.datasource.username=admin
spring.datasource.password=admin
    </pre>

    <h2 id="endpoints">Endpoints</h2>
    <h3>1. Receive Request (POST)</h3>
    <pre>
POST /api/sendrequest?type={type}&id={id}
    </pre>
    <h3>2. Retrieve Request (GET)</h3>
    <pre>
GET /api/getrequest?id={id}
    </pre>

    <h2 id="batch-processing-logic">Batch Processing Logic</h2>
    <p>Requests are <b>grouped into batches</b> if received within <b>5 seconds</b>.</p>

    <h2 id="database-schema">Database Schema</h2>
    <pre>
Table: staging_data
| Column         | Type                   | Description         |
|---------------|-----------------------|---------------------|
| id           | SERIAL PRIMARY KEY      | Unique request ID   |
| req_name     | VARCHAR(255)            | Request type        |
| json_text_data | TEXT                  | Large JSON payload  |
| created_date | TIMESTAMP WITHOUT TIME ZONE | Request timestamp |
    </pre>

    <h2 id="logging-mechanism">Logging Mechanism</h2>
    <pre>
logging.config=classpath:logback-spring.xml
logging.file.path=logs
logging.level.com.infy=DEBUG
    </pre>

    <h2 id="error-handling">Error Handling</h2>
    <p>Errors are logged and proper HTTP response codes are returned.</p>

    <h2 id="deployment">Deployment</h2>
    <h3>Creating a TAR Archive:</h3>
    <pre>
mvn clean package assembly:single
    </pre>
    <h3>Running in Production:</h3>
    <pre>
nohup java -jar target/ESHRestAPIMicroservice-1.0-SNAPSHOT.jar &
    </pre>
    <h3>Running in Docker:</h3>
    <pre>
docker build -t esh-microservice .
docker run -d -p 8443:8443 esh-microservice
    </pre>

    <h2 id="future-enhancements">Future Enhancements</h2>
    <ul>
        <li>Implement <b>Kafka-based event streaming</b> for better batch processing.</li>
        <li>Support for <b>MongoDB</b> as an optional storage backend.</li>
        <li>Implement <b>rate limiting</b> to handle high request volumes.</li>
    </ul>
</body>
</html>
