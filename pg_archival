DO $$
DECLARE
    start_date DATE;
    end_date DATE;
    partition_name TEXT;
    existing_table TEXT := 'your_existing_table'; -- PUT YOUR EXISTING TABLE NAME HERE
BEGIN
    -- Step 1: Create the Partitioned Table
    EXECUTE format('CREATE TABLE %I_partitioned (
                    id SERIAL PRIMARY KEY,
                    created_date DATE NOT NULL,
                    data TEXT
                ) PARTITION BY RANGE (created_date);',
                existing_table);

    -- Step 2: Determine Min and Max Dates in the Existing Table
    EXECUTE format('SELECT MIN(created_date), MAX(created_date) FROM %I', existing_table)
    INTO start_date, end_date;

    -- Step 3: Create Partitions for Every 90 Days
    WHILE start_date < end_date LOOP
        partition_name := format('%s_partition_%s', existing_table, TO_CHAR(start_date, 'YYYY_MM_DD'));
        EXECUTE format('CREATE TABLE %I PARTITION OF %I_partitioned
                        FOR VALUES FROM (%L) TO (%L)',
                        partition_name, existing_table || '_partitioned', start_date, start_date + INTERVAL '90 days');
        start_date := start_date + INTERVAL '90 days';
    END LOOP;

    -- Step 4: Transfer Data to the Partitioned Table
    EXECUTE format('INSERT INTO %I_partitioned (id, created_date, data)
                    SELECT id, created_date, data FROM %I',
                    existing_table, existing_table);

    -- Step 5: Drop the Old Table (Optional)
    EXECUTE format('DROP TABLE %I', existing_table);

    -- Step 6: Rename the Partitioned Table to the Original Table Name
    EXECUTE format('ALTER TABLE %I_partitioned RENAME TO %I', existing_table, existing_table);

END $$;
