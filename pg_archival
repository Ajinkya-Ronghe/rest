
Yes, you can directly automate this process on a Linux server using PostgreSQL and a scheduled job with cron. Hereâ€™s how you can set it up:

Step 1: Create the Function in PostgreSQL
First, create the function to handle archiving and deletion.

sql
Copy code
CREATE OR REPLACE FUNCTION archive_old_data(days_threshold INTEGER)
RETURNS VOID AS $$
BEGIN
    -- Insert older data into the backup table
    INSERT INTO original_table_backup
    SELECT *
    FROM original_table
    WHERE created_at < NOW() - INTERVAL '1 day' * days_threshold;

    -- Delete the archived data from the original table
    DELETE FROM original_table
    WHERE created_at < NOW() - INTERVAL '1 day' * days_threshold;
END;
$$ LANGUAGE plpgsql;
Step 2: Test the Function
Test the function manually to ensure it works as expected.

sql
Copy code
SELECT archive_old_data(30); -- Replace 30 with the desired number of days.
Step 3: Create a Shell Script
Create a shell script to call the PostgreSQL function.

bash
Copy code
#!/bin/bash

# Set variables
DB_NAME="your_database_name"
DB_USER="your_user"
DAYS_THRESHOLD=30

# Execute the function
psql -U $DB_USER -d $DB_NAME -c "SELECT archive_old_data($DAYS_THRESHOLD);"
Save this script as archive_data.sh. Make it executable:

bash
Copy code
chmod +x archive_data.sh
Step 4: Schedule the Script with Cron
Use cron to schedule this script to run at regular intervals.

Open the Cron Editor:

bash
Copy code
crontab -e
Add a Cron Job: Add a line to execute the script at the desired frequency. For example, to run the script daily at midnight:

bash
Copy code
0 0 * * * /path/to/archive_data.sh >> /var/log/archive_data.log 2>&1
This will log output to /var/log/archive_data.log.

Save and Exit: Save the crontab file and exit. The cron job will now run as scheduled.

Step 5: Verify the Setup
Check the backup table (original_table_backup) to ensure data is being archived.
Check the original table (original_table) to ensure old data is being deleted.
Review the log file (/var/log/archive_data.log) for any errors or output.
This approach automates the archival and deletion process directly on a Linux server without relying on external tools like pgAdmin.
