CREATE OR REPLACE FUNCTION archive_old_data(
    original_table_name TEXT,
    days_threshold INTEGER
)
RETURNS TEXT AS $$
DECLARE
    full_original_table TEXT;
    backup_table_name TEXT;
    full_backup_table TEXT;
BEGIN
    -- Generate the full table names with schema
    full_original_table := 'esh_main.' || original_table_name;
    backup_table_name := original_table_name || '_bkp';
    full_backup_table := 'esh_main.' || backup_table_name;

    -- Create the backup table if it doesn't exist
    EXECUTE format(
        'CREATE TABLE IF NOT EXISTS %I (LIKE %I INCLUDING ALL)',
        full_backup_table, full_original_table
    );

    -- Insert older data into the backup table
    EXECUTE format(
        'INSERT INTO %I SELECT * FROM %I WHERE created_at < NOW() - INTERVAL ''1 day'' * $1',
        full_backup_table, full_original_table
    )
    USING days_threshold;

    -- Delete the archived data from the original table
    EXECUTE format(
        'DELETE FROM %I WHERE created_at < NOW() - INTERVAL ''1 day'' * $1',
        full_original_table
    )
    USING days_threshold;

    -- Return success message
    RETURN format('Archival Successful: Data older than %s days from %I moved to %I', 
                  days_threshold, full_original_table, full_backup_table);
END;
$$ LANGUAGE plpgsql;
