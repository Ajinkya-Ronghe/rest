CREATE OR REPLACE FUNCTION archive_old_data(
    original_table_name TEXT,
    days_threshold INTEGER
)
RETURNS TEXT AS $$
DECLARE
    full_original_table TEXT;
    partition_table_name TEXT;
    archive_date DATE;
    start_date TEXT;
    end_date TEXT;
BEGIN
    -- Generate full original table name with schema
    full_original_table := 'esh_main.' || original_table_name;

    -- Calculate the archival date range
    archive_date := NOW() - INTERVAL '1 day' * days_threshold;
    start_date := archive_date::TEXT;
    end_date := (archive_date + INTERVAL '1 day')::TEXT;

    -- Generate partition table name with date extension
    partition_table_name := format('esh_main.%s_%s', original_table_name, to_char(archive_date, 'YYYYMMDD'));

    -- Step 1: Create the partition table if it doesn't exist
    PERFORM 1
    FROM pg_tables
    WHERE schemaname = 'esh_main' AND tablename = format('%s_%s', original_table_name, to_char(archive_date, 'YYYYMMDD'));

    IF NOT FOUND THEN
        RAISE NOTICE 'Creating partition table: %', partition_table_name;
        EXECUTE format(
            'CREATE TABLE %I PARTITION OF %I FOR VALUES FROM (%L) TO (%L)',
            partition_table_name, full_original_table, start_date, end_date
        );
    ELSE
        RAISE NOTICE 'Partition table already exists: %', partition_table_name;
    END IF;

    -- Step 2: Move data into the partition table
    RAISE NOTICE 'Moving data to partition table: %', partition_table_name;
    EXECUTE format(
        'INSERT INTO %I SELECT * FROM %I WHERE created_at >= %L AND created_at < %L',
        partition_table_name, full_original_table, start_date, end_date
    );

    -- Step 3: Delete the archived data from the original table
    RAISE NOTICE 'Deleting data from original table: %', full_original_table;
    EXECUTE format(
        'DELETE FROM %I WHERE created_at >= %L AND created_at < %L',
        full_original_table, start_date, end_date
    );

    -- Return success message
    RETURN format('Archival Successful: Data from %I moved to partition %I for date %s',
                  full_original_table, partition_table_name, archive_date);
END;
$$ LANGUAGE plpgsql;
